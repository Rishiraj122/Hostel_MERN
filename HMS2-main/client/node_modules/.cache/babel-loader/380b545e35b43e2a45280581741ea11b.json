{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header.js'; //name phone address roll registration email password\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomAllotment() {\n  _s();\n\n  const history = useHistory(); //the first value is current state and second value is function used to update our state\n\n  const [roll, setRoll] = useState('');\n  const [room, setRoom] = useState('');\n  const [block, setBlock] = useState('');\n\n  async function checkStudents(event) {\n    const response2 = await fetch('http://localhost:1337/api/studentdetails');\n    const data = await response2.json();\n    const count = 0;\n\n    for (let i = data.user.length - 1; i >= -1; i--) {\n      if (data.user[i].block == block) {\n        count++;\n      }\n    }\n\n    for (let i = 0; i < 10; i = i + 1) {\n      if (4 * i >= count) {\n        room = 4 * i;\n        setRoom(room);\n      }\n\n      i = 11;\n      registerUser(event);\n    }\n  }\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response2 = await fetch('http://localhost:1337/studentlogin');\n    const dataSize = await response2.json();\n    const response = await fetch('http://localhost:1337/api/allotroom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roll,\n        room,\n        block\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      window.location.reload(); // if registration is successfull \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Allotment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: checkStudents,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roll,\n        onChange: e => setRoll(e.target.value),\n        type: \"number\",\n        placeholder: \"Roll Number\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: block,\n        onChange: e => setBlock(e.target.value),\n        type: \"text\",\n        placeholder: \"Block\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input-control btn btn-dark\",\n        type: \"submit\",\n        value: \"Allot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RoomAllotment, \"Gzk2xm8fXcevTqtItfGMHXZvOwU=\", false, function () {\n  return [useHistory];\n});\n\n_c = RoomAllotment;\nexport default RoomAllotment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomAllotment\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js"],"names":["React","useState","useHistory","Header","RoomAllotment","history","roll","setRoll","room","setRoom","block","setBlock","checkStudents","event","response2","fetch","data","json","count","i","user","length","registerUser","preventDefault","dataSize","response","method","headers","body","JSON","stringify","status","window","location","reload","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Header from './Header.js'\n\n\n//name phone address roll registration email password\nfunction RoomAllotment() {\n\tconst history = useHistory()\n //the first value is current state and second value is function used to update our state\n\tconst [roll, setRoll] = useState('')\n    const [room, setRoom] = useState('')\n\tconst [block, setBlock] = useState('')\n\n\n\tasync function checkStudents(event){\n\t\tconst response2 = await fetch('http://localhost:1337/api/studentdetails')\n        const data = await response2.json();\n\t\tconst count=0;\n        for(let i=data.user.length-1;i>=-1;i--){\n           if(data.user[i].block==block){\n\t\t\t\tcount++;\n\t\t   }\n        }\n\t\tfor(let i=0;i<10;i=i+1){\n\t\t\tif(4*i>=count){\n\t\t\t\troom=4*i;\n\t\t\t\tsetRoom(room);\n\t\t\t}\n\t\t\ti=11;\n\t\t\tregisterUser(event);\n\t\t}\n\t}\n\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response2 = await fetch('http://localhost:1337/studentlogin');\n\t\tconst dataSize = await response2.json();\n\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n                roll,\n\t\t\t\troom,\n\t\t\t\tblock\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.status === 'ok') {\n\t\t\twindow.location.reload() // if registration is successfull \n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<div>\n\t\t<Header/>\n\t\t\t<h1>Room Allotment</h1>\n\t\t\t<form onSubmit={checkStudents}>\n                <input\n\t\t\t\t\tvalue={roll}\n\t\t\t\t\tonChange={(e) => setRoll(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Roll Number\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t{/* <br />\n                <input\n\t\t\t\t\tvalue={room}\n\t\t\t\t\tonChange={(e) => setRoom(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Room\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/> */}\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={block}\n\t\t\t\t\tonChange={(e) => setBlock(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Block\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"input-control btn btn-dark\" type=\"submit\" value=\"Allot\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default RoomAllotment\n"]},"metadata":{},"sourceType":"module"}