{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header.js'; //name phone address roll registration email password\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomAllotment() {\n  _s();\n\n  const history = useHistory(); //the first value is current state and second value is function used to update our state\n\n  const [roll, setRoll] = useState('');\n  const [room, setRoom] = useState('');\n  const [block, setBlock] = useState('');\n  const [occupancy, setOccupancy] = useState('');\n\n  async function checkRoom(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/studentlogin');\n    const data = await response.json();\n\n    for (let i = data.user.length - 1; i >= -1; i--) {\n      console.log(data.user[0]);\n      setRoom = data.user[i].room;\n\n      if (data.user[i].occupancy == null) {\n        occupancy = occupancy + 1;\n        setOccupancy = occupancy;\n        const response = await fetch('http://localhost:1337/api/allotroom', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll,\n            room,\n            block\n          })\n        });\n      } else if (data.user[i].occupancy < 4) {\n        occupancy = occupancy + 1;\n        setOccupancy = occupancy;\n        setRoom = data.user[i].room;\n        const response = await fetch('http://localhost:1337/api/allotroom', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll,\n            room,\n            block\n          })\n        });\n      } else {\n        setRoom = data.user[i].room + 1;\n        data.user[0].occupancy++;\n        registerUser(event);\n        break;\n      }\n    }\n  }\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/allotroom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roll,\n        room,\n        block\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      window.location.reload(); // if registration is successfull \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Allotment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: checkRoom,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roll,\n        onChange: e => setRoll(e.target.value),\n        type: \"number\",\n        placeholder: \"Roll Number\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: room,\n        onChange: e => setRoom(e.target.value),\n        type: \"number\",\n        placeholder: \"Room\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: block,\n        onChange: e => setBlock(e.target.value),\n        type: \"text\",\n        placeholder: \"Block\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input-control btn btn-dark\",\n        type: \"submit\",\n        value: \"Allot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RoomAllotment, \"0udcvJDUNC5gcPoLl5q2TFJnow4=\", false, function () {\n  return [useHistory];\n});\n\n_c = RoomAllotment;\nexport default RoomAllotment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomAllotment\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js"],"names":["React","useState","useHistory","Header","RoomAllotment","history","roll","setRoll","room","setRoom","block","setBlock","occupancy","setOccupancy","checkRoom","event","preventDefault","response","fetch","data","json","i","user","length","console","log","method","headers","body","JSON","stringify","registerUser","status","window","location","reload","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Header from './Header.js'\n\n\n//name phone address roll registration email password\nfunction RoomAllotment() {\n\tconst history = useHistory()\n //the first value is current state and second value is function used to update our state\n\tconst [roll, setRoll] = useState('')\n    const [room, setRoom] = useState('')\n\tconst [block, setBlock] = useState('')\n\tconst [occupancy, setOccupancy] = useState('')\n\n\n\tasync function checkRoom(event){\n\t\tevent.preventDefault()\n\t\tconst response = await fetch('http://localhost:1337/api/studentlogin')\n        const data = await response.json();\n        for(let i=data.user.length-1;i>=-1;i--){\n            console.log(data.user[0])\n\t\t\tsetRoom=data.user[i].room;\n\t\t\tif(data.user[i].occupancy==null){\n\t\t\t\toccupancy=occupancy+1;\n\t\t\t\tsetOccupancy=occupancy;\n\t\t\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\troll,\n\t\t\t\t\t\troom,\n\t\t\t\t\t\tblock\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if(data.user[i].occupancy<4){\n\t\t\t\toccupancy=occupancy+1;\n\t\t\t\tsetOccupancy=occupancy;\n\t\t\t\tsetRoom=data.user[i].room;\n\t\t\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\troll,\n\t\t\t\t\t\troom,\n\t\t\t\t\t\tblock\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\tsetRoom=data.user[i].room+1;\n\t\t\t\t\tdata.user[0].occupancy++;\n\t\t\t\t\tregisterUser(event);\n\t\t\t\t\tbreak;\n\t\t\t}\n        }\n\t}\n\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n                roll,\n\t\t\t\troom,\n\t\t\t\tblock\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.status === 'ok') {\n\t\t\twindow.location.reload() // if registration is successfull \n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<div>\n\t\t<Header/>\n\t\t\t<h1>Room Allotment</h1>\n\t\t\t<form onSubmit={checkRoom}>\n                <input\n\t\t\t\t\tvalue={roll}\n\t\t\t\t\tonChange={(e) => setRoll(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Roll Number\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n                <input\n\t\t\t\t\tvalue={room}\n\t\t\t\t\tonChange={(e) => setRoom(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Room\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={block}\n\t\t\t\t\tonChange={(e) => setBlock(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Block\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"input-control btn btn-dark\" type=\"submit\" value=\"Allot\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default RoomAllotment\n"]},"metadata":{},"sourceType":"module"}