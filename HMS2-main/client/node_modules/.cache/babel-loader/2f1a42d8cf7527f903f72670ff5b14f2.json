{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header.js'; //name phone address roll registration email password\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomAllotment() {\n  _s();\n\n  const history = useHistory(); //the first value is current state and second value is function used to update our state\n\n  const [roll, setRoll] = useState('');\n  const [room, setRoom] = useState('');\n  const [block, setBlock] = useState('');\n  const item = []; // async function checkStudents(event){\n  // \tconst response2 = await fetch('http://localhost:1337/api/studentdetails')\n  //     const data = await response2.json();\n  // \tconst count=0;\n  //     for(let i=data.user.length-1;i>=-1;i--){\n  //        if(data.user[i].block==block){\n  // \t\t\tcount++;\n  // \t   }\n  //     }\n  // \tfor(let i=0;i<10;i=i+1){\n  // \t\tif(4*i>=count){\n  // \t\t\troom=4*i;\n  // \t\t\tsetRoom(room);\n  // \t\t}\n  // \t\ti=11;\n  // \t\tregisterUser(event);\n  // \t}\n  // }\n\n  async function showRoom() {\n    const response = await fetch('http://localhost:1337/api/room');\n    const data = await response.json();\n\n    for (let i = data.user.length - 1; i >= -1; i--) {\n      this.setState({\n        person: data,\n        loading: false\n      });\n      item.push(data.user[i]);\n      console.log(data.user[0]);\n    }\n  }\n\n  async function registerUser(event) {\n    event.preventDefault(); // const response2 = await fetch('http://localhost:1337/api/studentlogin');\n    // const dataSize = await response2.json();\n    // console.log(dataSize.user.length);\n    // alert(dataSize.user.length);\n\n    const response = await fetch('http://localhost:1337/api/allotroom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roll,\n        room,\n        block\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      window.location.reload(); // if registration is successfull \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Allotment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Current Room Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showRoom,\n      children: \"Show Room Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: i.roomno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: i.occupancy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roll,\n        onChange: e => setRoll(e.target.value),\n        type: \"number\",\n        placeholder: \"Roll Number\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: room,\n        onChange: e => setRoom(e.target.value),\n        type: \"number\",\n        placeholder: \"Room\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: block,\n        onChange: e => setBlock(e.target.value),\n        type: \"text\",\n        placeholder: \"Block\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input-control btn btn-dark\",\n        type: \"submit\",\n        value: \"Allot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RoomAllotment, \"Gzk2xm8fXcevTqtItfGMHXZvOwU=\", false, function () {\n  return [useHistory];\n});\n\n_c = RoomAllotment;\nexport default RoomAllotment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomAllotment\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js"],"names":["React","useState","useHistory","Header","RoomAllotment","history","roll","setRoll","room","setRoom","block","setBlock","item","showRoom","response","fetch","data","json","i","user","length","setState","person","loading","push","console","log","registerUser","event","preventDefault","method","headers","body","JSON","stringify","status","window","location","reload","map","roomno","occupancy","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAGA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACxB,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CADwB,CAExB;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACG,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACH,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,IAAI,GAAC,EAAX,CANwB,CAQxB;AACA;AACG;AACH;AACG;AACA;AACH;AACA;AACG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAeC,QAAf,GAAyB;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACM,SAAI,IAAIC,CAAC,GAACF,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAiB,CAA3B,EAA6BF,CAAC,IAAE,CAAC,CAAjC,EAAmCA,CAAC,EAApC,EAAuC;AACnC,WAAKG,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEN,IAAT;AAAeO,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACAX,MAAAA,IAAI,CAACY,IAAL,CAAUR,IAAI,CAACG,IAAL,CAAUD,CAAV,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACG,IAAL,CAAU,CAAV,CAAZ;AACH;AACP;;AAED,iBAAeQ,YAAf,CAA4BC,KAA5B,EAAmC;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAGlC;AACA;AAEA;AACA;;AAEA,UAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AACnEe,MAAAA,MAAM,EAAE,MAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAF0D;AAKnEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACR5B,QAAAA,IADQ;AAEpBE,QAAAA,IAFoB;AAGpBE,QAAAA;AAHoB,OAAf;AAL6D,KAAxC,CAA5B;AAYA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAID,IAAI,CAACmB,MAAL,KAAgB,IAApB,EAA0B;AACzBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GADyB,CACA;AACzB;AACD;;AAGD,sBACC;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIE;AAAQ,MAAA,OAAO,EAAEzB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAMD,IAAI,CAAC2B,GAAL,CAASrB,CAAC,iBAChB;AAAK,QAAA,KAAK,EAAE,uBAAZ;AAAA,gCACC;AAAA,iCAAI;AAAA,sBAASA,CAAC,CAACsB;AAAX;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAItB,CAAC,CAACuB;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADM;AAAN;AAAA;AAAA;AAAA;AAAA,YALF,eAaC;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACa;AACX,QAAA,KAAK,EAAErB,IADI;AAEX,QAAA,QAAQ,EAAGoC,CAAD,IAAOnC,OAAO,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFb;AAGX,QAAA,IAAI,EAAC,QAHM;AAIX,QAAA,WAAW,EAAC,aAJD;AAKX,QAAA,KAAK,EAAC;AALK;AAAA;AAAA;AAAA;AAAA,cADb,eAQC;AAAA;AAAA;AAAA;AAAA,cARD,eASa;AACX,QAAA,KAAK,EAAEpC,IADI;AAEX,QAAA,QAAQ,EAAGkC,CAAD,IAAOjC,OAAO,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFb;AAGX,QAAA,IAAI,EAAC,QAHM;AAIX,QAAA,WAAW,EAAC,MAJD;AAKX,QAAA,KAAK,EAAC;AALK;AAAA;AAAA;AAAA;AAAA,cATb,eAgBC;AAAA;AAAA;AAAA;AAAA,cAhBD,eAiBC;AACC,QAAA,KAAK,EAAElC,KADR;AAEC,QAAA,QAAQ,EAAGgC,CAAD,IAAO/B,QAAQ,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,WAAW,EAAC,OAJb;AAKC,QAAA,KAAK,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAjBD,eAwBC;AAAA;AAAA;AAAA;AAAA,cAxBD,eAyBC;AAAO,QAAA,KAAK,EAAC,4BAAb;AAA0C,QAAA,IAAI,EAAC,QAA/C;AAAwD,QAAA,KAAK,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAzBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA2CA;;GA7GQxC,a;UACQF,U;;;KADRE,a;AA+GT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Header from './Header.js'\n\n\n//name phone address roll registration email password\nfunction RoomAllotment() {\n\tconst history = useHistory()\n //the first value is current state and second value is function used to update our state\n\tconst [roll, setRoll] = useState('')\n    const [room, setRoom] = useState('')\n\tconst [block, setBlock] = useState('')\n\tconst item=[];\n\n\t// async function checkStudents(event){\n\t// \tconst response2 = await fetch('http://localhost:1337/api/studentdetails')\n    //     const data = await response2.json();\n\t// \tconst count=0;\n    //     for(let i=data.user.length-1;i>=-1;i--){\n    //        if(data.user[i].block==block){\n\t// \t\t\tcount++;\n\t// \t   }\n    //     }\n\t// \tfor(let i=0;i<10;i=i+1){\n\t// \t\tif(4*i>=count){\n\t// \t\t\troom=4*i;\n\t// \t\t\tsetRoom(room);\n\t// \t\t}\n\t// \t\ti=11;\n\t// \t\tregisterUser(event);\n\t// \t}\n\t// }\n\n\tasync function showRoom(){\n\t\tconst response = await fetch('http://localhost:1337/api/room');\n\t\tconst data = await response.json();\n        for(let i=data.user.length-1;i>=-1;i--){\n            this.setState({person: data, loading: false})\n            item.push(data.user[i]);\n            console.log(data.user[0])\n        }\n\t}\n\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\t// const response2 = await fetch('http://localhost:1337/api/studentlogin');\n\t\t// const dataSize = await response2.json();\n\n\t\t// console.log(dataSize.user.length);\n\t\t// alert(dataSize.user.length);\n\n\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n                roll,\n\t\t\t\troom,\n\t\t\t\tblock\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.status === 'ok') {\n\t\t\twindow.location.reload() // if registration is successfull \n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<div>\n\t\t<Header/>\n\t\t\t<h1>Room Allotment</h1>\n\t\t\t<p>Current Room Status</p>\n\t\t\t\t<button onClick={showRoom}>Show Room Status</button>\n\t\t\t\t<div>{item.map(i => \n\t\t\t\t<div class= \"alert alert-secondary\">\n\t\t\t\t\t<h6><strong>{i.roomno}</strong></h6>\n\t\t\t\t\t<p>{i.occupancy}</p>\n\t\t\t\t</div>\n\n\t\t\t\t)}</div>\n\n\t\t\t<form onSubmit={registerUser}>\n                <input\n\t\t\t\t\tvalue={roll}\n\t\t\t\t\tonChange={(e) => setRoll(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Roll Number\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n                <input\n\t\t\t\t\tvalue={room}\n\t\t\t\t\tonChange={(e) => setRoom(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Room\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={block}\n\t\t\t\t\tonChange={(e) => setBlock(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Block\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"input-control btn btn-dark\" type=\"submit\" value=\"Allot\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default RoomAllotment\n"]},"metadata":{},"sourceType":"module"}