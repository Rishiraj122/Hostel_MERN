{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport RoomStatus from './RoomStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomAllotment() {\n  _s();\n\n  const history = useHistory(); //the first value is current state and second value is function used to update our state\n\n  const [roll, setRoll] = useState('');\n  const [room, setRoom] = useState('');\n  const [block, setBlock] = useState('');\n  const [occupancy, setOccupancy] = useState('');\n  const item = [];\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response2 = await fetch('http://localhost:1337/api/room', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        room,\n        roll\n      })\n    });\n    const response = await fetch('http://localhost:1337/api/allotroom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roll,\n        room\n      })\n    });\n    const data2 = await response2.json();\n    const data = await response.json();\n\n    if (data.status && data2.status === 'ok') {\n      window.location.reload(); // if registration is successfull \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(RoomStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Allotment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roll,\n        onChange: e => setRoll(e.target.value),\n        type: \"number\",\n        placeholder: \"Roll Number\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: room,\n        onChange: e => setRoom(e.target.value),\n        type: \"number\",\n        placeholder: \"Room\",\n        class: \"input-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input-control btn btn-dark\",\n        type: \"submit\",\n        value: \"Allot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RoomAllotment, \"0udcvJDUNC5gcPoLl5q2TFJnow4=\", false, function () {\n  return [useHistory];\n});\n\n_c = RoomAllotment;\nexport default RoomAllotment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomAllotment\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/project/HMS2-main/client/src/components/RoomAllotment.js"],"names":["React","useState","useHistory","Header","RoomStatus","RoomAllotment","history","roll","setRoll","room","setRoom","block","setBlock","occupancy","setOccupancy","item","registerUser","event","preventDefault","response2","fetch","method","headers","body","JSON","stringify","response","data2","json","data","status","window","location","reload","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Header from './Header.js'\nimport RoomStatus from './RoomStatus'\n\n\nfunction RoomAllotment() {\n\tconst history = useHistory()\n //the first value is current state and second value is function used to update our state\n\tconst [roll, setRoll] = useState('')\n    const [room, setRoom] = useState('')\n\tconst [block, setBlock] = useState('')\n\tconst [occupancy, setOccupancy] = useState('')\n\tconst item=[];\n\t\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response2 = await fetch('http://localhost:1337/api/room',{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\troom,\n\t\t\t\troll\n\t\t\t})\n\t\t})\n\n\t\tconst response = await fetch('http://localhost:1337/api/allotroom', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n                roll,\n\t\t\t\troom\n\t\t\t}),\n\t\t})\n\n\t\tconst data2 = await response2.json()\n\t\tconst data = await response.json()\n\n\t\tif (data.status && data2.status === 'ok') {\n\t\t\twindow.location.reload() // if registration is successfull \n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<div>\n\t\t<Header/>\n\t\t<RoomStatus></RoomStatus>\n\t\t\t<h1>Room Allotment</h1>\n\t\t\t<form onSubmit={registerUser}>\n                <input\n\t\t\t\t\tvalue={roll}\n\t\t\t\t\tonChange={(e) => setRoll(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Roll Number\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n                <input\n\t\t\t\t\tvalue={room}\n\t\t\t\t\tonChange={(e) => setRoom(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Room\"\n\t\t\t\t\tclass=\"input-control\" \n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"input-control btn btn-dark\" type=\"submit\" value=\"Allot\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default RoomAllotment\n"]},"metadata":{},"sourceType":"module"}